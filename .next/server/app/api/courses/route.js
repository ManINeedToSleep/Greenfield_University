(()=>{var e={};e.id=648,e.ids=[648],e.modules={96330:e=>{"use strict";e.exports=require("@prisma/client")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},80180:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>j,routeModule:()=>m,serverHooks:()=>y,workAsyncStorage:()=>f,workUnitAsyncStorage:()=>w});var s={};t.r(s),t.d(s,{DELETE:()=>x,GET:()=>d,POST:()=>p,PUT:()=>l});var o=t(42706),n=t(28203),a=t(45994),i=t(39187),u=t(84908),c=t(96330);async function d(){try{let e=await u.A.course.findMany({include:{instructor:{select:{id:!0,firstName:!0,lastName:!0}}},orderBy:{createdAt:"desc"}});return i.NextResponse.json(e)}catch(e){return console.error("Error fetching courses:",e),i.NextResponse.json({error:"Failed to fetch courses"},{status:500})}}async function p(e){try{let r=await e.json();if(!await u.A.user.findFirst({where:{id:r.instructorId,role:"FACULTY"}}))return i.NextResponse.json({error:"Invalid instructor - must be faculty member"},{status:400});if(await u.A.course.findUnique({where:{code:r.code}}))return i.NextResponse.json({error:"Course code already exists"},{status:400});let t=await u.A.course.create({data:{code:r.code.toUpperCase(),name:r.name,description:r.description,instructorId:r.instructorId},include:{instructor:{select:{id:!0,firstName:!0,lastName:!0}}}});return i.NextResponse.json(t,{status:201})}catch(e){if(console.error("Error creating course:",e),e instanceof c.Prisma.PrismaClientKnownRequestError&&"P2002"===e.code)return i.NextResponse.json({error:"Course code already exists"},{status:400});return i.NextResponse.json({error:"Failed to create course"},{status:500})}}async function l(e){try{let r=await e.json();if(!await u.A.user.findFirst({where:{id:r.instructorId,role:"FACULTY"}}))return i.NextResponse.json({error:"Invalid instructor - must be faculty member"},{status:400});let t=await u.A.course.update({where:{id:r.id},data:{code:r.code,name:r.name,description:r.description,instructorId:r.instructorId},include:{instructor:{select:{id:!0,firstName:!0,lastName:!0}}}});return i.NextResponse.json(t)}catch(e){return console.error("Error updating course:",e),i.NextResponse.json({error:"Failed to update course"},{status:500})}}async function x(e){try{let{searchParams:r}=new URL(e.url),t=r.get("id");if(!t)return i.NextResponse.json({error:"Course ID is required"},{status:400});return await u.A.course.delete({where:{id:t}}),new i.NextResponse(null,{status:204})}catch(e){return console.error("Error deleting course:",e),i.NextResponse.json({error:"Failed to delete course"},{status:500})}}let m=new o.AppRouteRouteModule({definition:{kind:n.RouteKind.APP_ROUTE,page:"/api/courses/route",pathname:"/api/courses",filename:"route",bundlePath:"app/api/courses/route"},resolvedPagePath:"C:\\Users\\Launchpad\\Greenfield_University\\src\\app\\api\\courses\\route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:f,workUnitAsyncStorage:w,serverHooks:y}=m;function j(){return(0,a.patchFetch)({workAsyncStorage:f,workUnitAsyncStorage:w})}},96487:()=>{},78335:()=>{},84908:(e,r,t)=>{"use strict";t.d(r,{A:()=>o});var s=t(96330);let o=global.prisma||new s.PrismaClient({log:["query","error","warn"]})}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[638,452],()=>t(80180));module.exports=s})();